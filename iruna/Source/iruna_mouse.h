//*********************************************************************
/*!
	@file	iruna_mouse.h
	@brief	マウスの管理
	@author	立川 翔野
	@date	2011/06/24	- 作成
*/
//*********************************************************************

/*----多重インクルード防止-------------------------------------------------*/
#ifndef IRUNA_MOUSE_H
#define IRUNA_MOUSE_H

/*----インクルード-------------------------------------------------*/
#include "../Include/iruna_utility.h"
#include "../Include/iruna_input_common.h"

/*----データ型 宣言------------------------------------------------*/
namespace iruna
{
namespace io
{

//!=====================================================================
//!
//! @class	Mouse
//! @brief	マウス管理クラス
//!
//!=====================================================================
class Mouse
{
// プライベート	メンバ変数
private:
	LPDIRECTINPUTDEVICE8	pDIDevice;	//!< マウスデバイス
	static DIMOUSESTATE2*	nowState;	//!< 現在の状態(静的メンバ変数)
	static DIMOUSESTATE2*	oldState;	//!< 前回の状態(静的メンバ変数)
	static POINT			position;	//!< マウスの位置(静的メンバ変数)
	static HWND				hWindow;	//!< カーソルの位置修正用(静的メンバ変数)

// パブリック		メンバ関数
public:
	//!--------------------------------------------------------------------
	//! 
	//! @brief	コンストラクタ
	//! 
	//!--------------------------------------------------------------------
	Mouse();

	//!--------------------------------------------------------------------
	//! 
	//! @brief	デストラクタ
	//! 
	//!--------------------------------------------------------------------
	~Mouse();

	//!--------------------------------------------------------------------
	//! 
	//! @brief	マウスデバイスを作成する
	//! @param	[in] hWindow	- ウィンドウハンドル
	//! @param	[in] pDInput	- ダイレクトインプット
	//! @retval	結果フラグ	ture：成功　false：失敗
	//! 
	//!--------------------------------------------------------------------
	bool	Create( HWND hWindow, LPDIRECTINPUT8 pDInput );

	//!--------------------------------------------------------------------
	//! 
	//! @brief	マウスデバイスを更新する
	//! @retval	結果フラグ	ture：成功　false：失敗
	//! 
	//!--------------------------------------------------------------------
	bool	Update();

	//!--------------------------------------------------------------------
	//! 
	//! @brief	指定したキーの状態を返す(静的メンバ関数)
	//! @param	[in] key	- 調べたいキー
	//! @retval	押されたキーの状態
	//! 
	//!--------------------------------------------------------------------
	static INPUT_STATE	GetState( MouseButton::Type key );

	//!--------------------------------------------------------------------
	//! 
	//! @brief	マウスカーソルの位置を返す(静的メンバ関数)
	//! @retval	マウスカーソルの位置
	//! 
	//!--------------------------------------------------------------------
	static POINT	GetPosition();
};

}	//	io		end
}	//	iruna	end

#endif	//	IRUNA_MOUSE_H	end