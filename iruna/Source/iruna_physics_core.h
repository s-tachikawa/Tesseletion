//*********************************************************************
/*!
	@file	iruna_physics_core.h
	@brief	物理エンジンの初期化と解放
	@author	立川 翔野
	@date	2012/05/27	- 作成
*/
//*********************************************************************
/*----多重インクルード防止-------------------------------------------------*/
#ifndef IRUNA_PHYSICS_CORE_H
#define IRUNA_PHYSICS_CORE_H

/*----インクルード-------------------------------------------------*/
#include <btBulletDynamicsCommon.h>
#include "../Include/iruna_math.h"

/*----データ型宣言-------------------------------------------------*/
namespace iruna
{
namespace physics
{
//!=====================================================================
//!
//! @class	PhysicsCore
//! @brief	物理エンジン設定用データ
//!
//!=====================================================================
class PhysicsCore
{
private:

	static btDispatcher*					dispatcher;		//!<	当たり判定内部通信用クラス？
	static btBroadphaseInterface*			sweep;			//!<	インターフェース
	static btConstraintSolver*				solver;			//!<
	static btCollisionConfiguration*		config;			//!<	当たり判定用クラス?
	static btDynamicsWorld*					world;			//!<	物理エンジン設定クラス

public:
	//!--------------------------------------------------------------------
	//! 
	//! @brief	コンストラクタ
	//! 
	//!--------------------------------------------------------------------
	PhysicsCore();

	//!--------------------------------------------------------------------
	//! 
	//! @brief	デストラクタ
	//! 
	//!--------------------------------------------------------------------
	~PhysicsCore();

	//!--------------------------------------------------------------------
	//! 
	//! @brief	物理エンジンの初期化
	//! @retval	結果フラグ	0：成功　-1：失敗
	//! 
	//!--------------------------------------------------------------------
	int PhysicsCoreInit( math::Vector3* minWold, math::Vector3* maxWold );

	//!--------------------------------------------------------------------
	//! 
	//! @brief	物理エンジンの解放
	//! 
	//!--------------------------------------------------------------------
	void PhysicsCoreRelese();

	//!--------------------------------------------------------------------
	//! 
	//! @brief	物理エンジン設定クラスの取得
	//! @retval	物理エンジン設定クラス
	//! 
	//!--------------------------------------------------------------------
	static btDynamicsWorld* GetDynamicsWorld();

};


}	//	physics	end
}	//	iruna	end


#endif	//	IRUNA_PHYSICS_CORE_H	end