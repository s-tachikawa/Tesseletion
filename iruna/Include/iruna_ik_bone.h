//*********************************************************************
/*!
	@file	iruna_ik_bone.h
	@brief	IKボーン管理構造体
	@author	立川 翔野
	@date	2012/06/16 	- 作成
*/
//*********************************************************************
/*----多重インクルード---------------------------------*/
#ifndef IRUNA_IK_BONE_H
#define IRUNA_IK_BONE_H

/*----インクルード---------------------------------*/
#include "../Include/iruna_utility.h"
#include "../Include/iruna_math.h"
#include "../Include/iruna_bone.h"

/*----データ型 宣言------------------------------------------------*/
namespace iruna
{
namespace graphics
{
//!=====================================================================
//!
//! @struct	IKBone
//! @brief	IKボーン管理構造体
//!
//!=====================================================================
struct IkBone
{
public:
	
	int					boneCount;			//!<	ボーンの数
	int					index;				//!<	IK番号
	int					targetIndex;		//!<	IKターゲットボーン番号
	int					length;				//!<	IKボーン接続個数(子の数)
	int					iterations;			//!<	再帰回数
	float				weight;				//!<	IKボーン影響度
	std::vector< int >	child;				//!<	IK影響下のボーン番号

public:
	//!--------------------------------------------------------------------
	//! 
	//! @brief	コンストラクタ
	//! 
	//!--------------------------------------------------------------------
	IkBone();

	//!--------------------------------------------------------------------
	//! 
	//! @brief	IKボーンを更新させ影響下のボーンの更新する
	//! @param	[in] bone	- ボーンの数(PMDの場合IKボーンも含まれる)
	//! 
	//!--------------------------------------------------------------------
	void IkUpdate( Bone* bone );

};

}	//	graphics	end
}	//	iruna		end

#endif	//	IRUNA_IK_BONE_H	end