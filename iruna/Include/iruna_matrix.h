//*********************************************************************
/*!
	@file	white_matrix.h
	@brief	行列関連
	@author	立川 翔野
	@date	2011/06/23	- 作成
*/
//*********************************************************************

/*----多重インクルード防止-------------------------------------------------*/
#ifndef IRUNA_MATRIX_H
#define IRUNA_MATRIX_H

/*----インクルード-------------------------------------------------*/
#include "../Include/iruna_utility.h"

namespace iruna
{
namespace math
{


//!=====================================================================
//!
//! @class	Matrix
//! @brief	
//!
//!=====================================================================
typedef	D3DXMATRIX	Matrix;


//!=====================================================================
//!
//! @class	WoldMatrix
//! @brief	拡張型ワールド行列
//!
//!=====================================================================
class WoldMatrix
{
//	プライベート	メンバ変数
private:
	Matrix tran;	//!<	平行移動行列
	Matrix rota;	//!<	回転行列
	Matrix scal;	//!<	拡大縮小行列

//	パブリック	メンバ関数
public:

	//!--------------------------------------------------------------------
	//! 
	//! @brief	コンストラクタ
	//! 
	//!--------------------------------------------------------------------
	WoldMatrix();

	//!--------------------------------------------------------------------
	//! 
	//! @brief	指定した座標で平行移動行列を作成する
	//! @param	[in] vecX		- X座標
	//! @param	[in] vecY		- Y座標
	//! @param	[in] vecZ		- Z座標
	//! 
	//!--------------------------------------------------------------------
	void SetTranslation( float vecX, float vecY, float vecZ );

	//!--------------------------------------------------------------------
	//! 
	//! @brief	指定した座標で回転行列を作成する
	//! @param	[in] radX		- X軸回転量
	//! @param	[in] radY		- Y軸回転量
	//! @param	[in] radZ		- Z軸回転量
	//! 
	//!--------------------------------------------------------------------
	void SetRotation( float radX, float radY, float radZ );

	//!--------------------------------------------------------------------
	//! 
	//! @brief	指定した座標で拡大･縮小行列を作成する
	//! @param	[in] scalX		- X軸
	//! @param	[in] scalY		- Y軸
	//! @param	[in] scalZ		- Z軸
	//! 
	//!--------------------------------------------------------------------
	void SetScal( float scalX, float scalY, float scalZ );

	//!--------------------------------------------------------------------
	//! 
	//! @brief	ワールド行列の取得
	//! @retval	作成したワールド行列
	//! 
	//!--------------------------------------------------------------------
	Matrix GetWoldMatrix();

};

}	//	math	end
}	//	iruna	end

#endif	//	IRUNA_MATRIX_H	end