//*********************************************************************
/*!
	@file	iruna_effect.h
	@brief	シェーダーの管理
	@author	立川 翔野
	@date	2011/06/25	- 作成
	@date	2011/12/30	- 更新 DirectX仕様に変更頂点シェーダーピクセルシェーダージオメトリーシェーダーを管理
*/
//*********************************************************************

/*----多重インクルード防止-------------------------------------------------*/
#ifndef IRUNA_VERTEX_SHADER_H
#define IRUNA_VERTEX_SHADER_H

/*----インクルード-------------------------------------------------*/
#include "../Include/iruna_base_shader.h"
#include "../Include/iruna_utility.h"
#include "../Include/iruna_math.h"

/*----データ型 宣言------------------------------------------------*/
namespace iruna
{
namespace graphics
{
	class VertexDeclaration;
}
}

/*----データ型 宣言------------------------------------------------*/
namespace iruna
{
namespace graphics
{

//!=====================================================================
//!
//! @class	Effect
//! @brief	エフェクト管理クラス
//!
//!=====================================================================
class VertexShader : public ShaderBase
{
//	フレンドクラス
	friend class VertexDeclaration;		//!< 頂点シェーダー用ボルブを取得しないといけないので

//	プライベート	メンバ変数
private:
	ID3D11VertexShader*		m_pcVS;				//!< 頂点シェーダ
	ID3DBlob*				m_pcShaderBlob;		//!< 頂点レイアウト作成時に必要なのでメンバー変数

//	プライベート	メンバ変数
private:

//	パブリック	メンバ変数
public:
	//!--------------------------------------------------------------------
	//! 
	//! @brief	コンストラクタ
	//! 
	//!--------------------------------------------------------------------
	VertexShader();

	//!--------------------------------------------------------------------
	//! 
	//! @brief		デストラクタ
	//! 
	//!--------------------------------------------------------------------
	~VertexShader();

	//!--------------------------------------------------------------------
	//! 
	//! @brief	頂点シェーダー作成
	//! @param	[in] path		- シェーダーファイル内の頂点シェーダー関数の指定
	//! @param	[in] flag		- 頂点シェーダーバージョン
	//! @retval	結果フラグ	ture：成功　false：失敗
	//! 
	//!--------------------------------------------------------------------
	bool CreateShader( std::string path, std::string strVertexEntry, eShaderVersion eVersion );
	
	//!--------------------------------------------------------------------
	//! 
	//! @brief	コンスタントバッファの作成
	//! @param	[in] nBufferSize		- 作成するコンスタントバッファのサイズ
	//! @retval	結果フラグ	ture：成功　false：失敗
	//! 
	//!--------------------------------------------------------------------
	bool CreateConstantBuffer( int nBufferSize );

	//!--------------------------------------------------------------------
	//! 
	//! @brief	頂点シェーダー作成
	//! @param	[in] pData				- バッファに格納するデータ
	//! @param	[in] nRegisterNum		- シェーダー内変数のレジスタ番号
	//! @param	[in] nBufferSize		- 設定するデータサイズ
	//! @retval	結果フラグ	ture：成功　false：失敗
	//! 
	//!--------------------------------------------------------------------
	bool SetConstantBuffer( void* pData, int nRegisterNum, int nBufferSize );

	//!--------------------------------------------------------------------
	//! 
	//! @brief	コンスタントバッファをシェーダーにセット
	//! @param	[in] pcTex		- テクスチャ格納クラス
	//! @retval	結果フラグ	ture：成功　false：失敗
	//! 
	//!--------------------------------------------------------------------
	bool SetTexture( Texture* pcTex, int nNum = 0 );

	//!--------------------------------------------------------------------
	//! 
	//! @brief	作成されているシェーダーをデバイスコンテキストにセット
	//! @retval	結果フラグ	ture：成功　false：失敗
	//! 
	//!--------------------------------------------------------------------
	bool SetShader();
};


}	//	graphics	end
}	//	iruna		end



#endif	//	IRUNA_VERTEX_SHADER_H	end