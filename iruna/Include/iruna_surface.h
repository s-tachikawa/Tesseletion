//*********************************************************************
/*!
	@file	iruna_surface.h
	@brief	サーフェス関連
	@author	立川 翔野
	@date	2011/06/23	- 作成
	@date	2011/06/30	- Zバッファの取得と指定したレンダーターゲットの初期化を追加
*/
//*********************************************************************

/*----多重インクルード防止-------------------------------------------------*/
#ifndef IRUNA_SURFACE_H
#define IRUNA_SURFACE_H

/*----インクルード-------------------------------------------------*/
#include "../Include/iruna_utility.h"

/*----データ型 宣言------------------------------------------------*/
namespace iruna
{
namespace graphics
{

//!=====================================================================
//!
//! @class	Surface
//! @brief	サーフェスを扱うクラス
//!
//!=====================================================================
class Surface
{
//	パブリック	型定義
public:
	// Zバッファのデータ型一覧
	enum Z_Format{
		Z_D16		=  0,	//!< D3DFMT_D16
		Z_D32		=  1,	//!< D3DFMT_D32
		Z_D24		=  2,	//!< D3DFMT_D24X8
	};

//	プライベート	メンバ変数
private:
	LPDIRECT3DSURFACE9	surface;	//< サーフェス

//	パブリック		メンバ変数
public:
	//!--------------------------------------------------------------------
	//! 
	//! @brief	コンストラクタ(初期化するだけ)
	//! 
	//!--------------------------------------------------------------------
	Surface();

	//!--------------------------------------------------------------------
	//! 
	//! @brief	コピーコンストラクタ、参照カウントをインクリメントする
	//! 
	//!--------------------------------------------------------------------
	Surface( const Surface& another );

	//!--------------------------------------------------------------------
	//! 
	//! @brief	デストラクタ、参照カウントをデクリメントする
	//! 
	//!--------------------------------------------------------------------
	~Surface();

	//!--------------------------------------------------------------------
	//! 
	//! @brief	Zバッファを作成する
	//! @param	[in] width	- Zバッファの横幅
	//! @param	[in] height	- Zバッファの高さ
	//! @param	[in] format	- Zバッファのピクセルフォーマット
	//! @retval	結果フラグ	ture：成功　false：失敗
	//! 
	//!--------------------------------------------------------------------
	bool	CreateDepth( U_INT width, U_INT height, Z_Format format );

	//!--------------------------------------------------------------------
	//! 
	//! @brief	裏画面の描き込み先をこのサーフェスにする
	//! @param	[in] index	- レンダリングターゲットの番号
	//! @retval	結果フラグ	ture：成功　false：失敗
	//! 
	//!--------------------------------------------------------------------
	bool	SetRenderTarget( U_LONG index );

	//!--------------------------------------------------------------------
	//! 
	//! @brief	Zバッファの描き込み先をこのサーフェスにする
	//! @retval	結果フラグ	ture：成功　false：失敗
	//! 
	//!--------------------------------------------------------------------
	bool	SetDepthTarget();

	//!--------------------------------------------------------------------
	//! 
	//! @brief	代入演算子オーバーロード、LPDIRECT3DSURFACE9をつっこめるように
	//! @param	[in] setSurface	- つっこみたいサーフェス
	//! @retval	自身の参照
	//! 
	//!--------------------------------------------------------------------
	Surface&	operator =( LPDIRECT3DSURFACE9 setSurface );


};

}	// graphics	end
}	// iruna	end

/*----関数 宣言----------------------------------------------------*/
namespace iruna
{
namespace graphics
{

//!--------------------------------------------------------------------
//! 
//! @brief	裏画面のサーフェスを取得する
//! @param	[out] surface	- 取得したサーフェスを格納する
//! @param	[in] index		- レンダリングターゲットの番号
//! @retval	結果フラグ	ture：成功　false：失敗
//! 
//!--------------------------------------------------------------------
bool	GetRenderTarget( Surface& surface, U_LONG index );

//!--------------------------------------------------------------------
//! 
//! @brief	Zバッファのサーフェスを取得する
//! @param	[out] surface	- 取得したサーフェスを格納する
//! @retval	結果フラグ	ture：成功　false：失敗
//! 
//!--------------------------------------------------------------------
bool	GetDepthTarget( Surface& surface );

//!--------------------------------------------------------------------
//! 
//! @brief	指定したRenderTargetを初期化する
//! @param	[in] type	- 初期化するサーフェースの番号
//! @retval	結果フラグ	ture：成功　false：失敗
//! 
//!--------------------------------------------------------------------
bool	SetRenderTargetFormat( U_LONG target );

//!--------------------------------------------------------------------
//! 
//! @brief	バックバッファを取得
//! @param	[out] back_buffer	- バックバッファにするサーフェース
//! @retval	結果フラグ	ture：成功　false：失敗
//! 
//!--------------------------------------------------------------------
bool	GetBackBuffer( Surface& back_buffer );

}	//	graphics	end
}	//	iruna		end

#endif	//	IRUNA_SURFACE_H	end
